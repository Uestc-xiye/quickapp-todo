"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.searchSn=searchSn,exports.startDebug=startDebug,exports.default=void 0;var _path=_interopRequireDefault(require("path")),_fs=_interopRequireDefault(require("fs")),_qrImage=_interopRequireDefault(require("qr-image")),_recordClient=require("@hap-toolkit/shared-utils/lib/record-client"),_sharedUtils=require("@hap-toolkit/shared-utils"),_config=_interopRequireDefault(require("@hap-toolkit/shared-utils/config")),_utils=require("../utils"),_service=require("./service");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}async function index(e,t){const r=_path.default.resolve(__dirname,"../client/index.html");try{_fs.default.existsSync(r)?(e.set("Content-Type","text/html;charset=utf8"),e.body=_fs.default.createReadStream(r)):(await t(),e.throw("404",`无法找到${r}文件`))}catch(t){_sharedUtils.colorconsole.error(`### App Server ### 无法获取${r}文件: ${t}`),e.body=`404 Not found ${r}`}}async function register(e,t){_sharedUtils.colorconsole.info(`### App Server ### 收到App注册信息, 格式:\n${JSON.stringify(e.request.body)}\n`),await t();const{ws:r,application:o}=e.request.body,{serverPort:s}=e.conf.defaults,i=(0,_service.getInspectorUrl)({ws:r,serverPort:s});emitWSEvent(e.io,"appRegistered",{inspectorUrl:i,application:o}),_sharedUtils.colorconsole.info(`请访问以下链接进行调试：\n\n${i}\n`)}async function adapterForBackwardComp(e,t){try{const r=e.request.body,{method:o,path:s}=e,i="ws"in r&&r.ws.indexOf("inspector")>=0,a="application"in r&&r.application.indexOf("hybrid.loader")>=0;if("post"===o.toLowerCase()&&"/"===s&&i&&a){_sharedUtils.colorconsole.warn("调试器已有重要更新，请更新调试器"),emitWSEvent(e.io,"informUpdate");const{ws:t,application:o}=r,{serverPort:s}=e.conf.defaults,i=(0,_service.getInspectorUrl)({ws:t,serverPort:s});emitWSEvent(e.io,"appRegistered",{inspectorUrl:i,application:o}),_sharedUtils.colorconsole.info(`请访问以下链接进行调试：\n\n${i}\n`)}else await t()}catch(e){_sharedUtils.colorconsole.error(`### App Server ### 出错信息: ${e.message}`),_sharedUtils.colorconsole.error("### App Server ### 当前调试器与toolkit不兼容，请更新调试器。"),await t()}}async function qrCode(e,t){const{serverPort:r}=e.conf.defaults,o=`http://${(0,_sharedUtils.getServerIPAndPort)(r)}`,s=_qrImage.default.image(o,{size:9});await t(),e.type="image/png",e.body=s}async function searchSn(e,t){e.status=200;const r=_config.default.clientRecordPath;try{if(_fs.default.existsSync(r)){const e=(0,_recordClient.getRecords)(r),t=(0,_recordClient.getProjectClients)(e);t.length>0&&(_sharedUtils.colorconsole.log("### App Loader ### 通知设备开始下发SN"),t.forEach((function(e){"127.0.0.1"===e.ip&&(0,_sharedUtils.getDeviceInfo)(e,(t,r)=>{t||r.sn||(0,_service.callDeviceWithOwnSn)(e)})})))}else await t(),e.throw("404","无法获取设备SN")}catch(e){_sharedUtils.colorconsole.warn(`### App Server ### 没有记录设备信息，请尝试重新连接: ${e}`)}}async function startDebug(e,t){e.status=200;const r=(0,_service.getDebugInfoFromRequest)(e.request),{sn:o,linkMode:s,devicePort:i,application:a}=r;let n=r.ws;if(s===_service.LINK_MODE.ADB){const{localWsPort:r,err:s}=await e.adbDebugger.forwardForWsChannel(o,i);if(s)return console.error(`startDebug(): adb forward 端口映射失败: ${s.message}`),void await t();n=n.replace(i,r)}const{serverPort:c}=e.conf.defaults,l=(0,_service.getInspectorUrl)({ws:n,serverPort:c});emitWSEvent(e.io,"appRegistered",{inspectorUrl:l,application:a}),_sharedUtils.colorconsole.info(`请访问以下链接进行调试：\n\n${l}\n`);const d=e.conf.options.callback;if(d&&"function"==typeof d){d({url:l,action:"openDebugWin"})}!1!==e.conf.options.openDebugger&&await(0,_utils.startChrome)(l,{chromePath:e.conf.options.chromePath}),await t()}function emitWSEvent(e,t,r){e.sockets.emit(t,r||{})}var _default={index:index,register:register,adapterForBackwardComp:adapterForBackwardComp,qrCode:qrCode,searchSn:searchSn,startDebug:startDebug};exports.default=_default;
//# sourceMappingURL=routes.js.map
