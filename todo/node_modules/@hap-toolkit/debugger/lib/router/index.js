"use strict";var _path=_interopRequireDefault(require("path")),_koaRouter=_interopRequireDefault(require("koa-router")),_koaBody=_interopRequireDefault(require("koa-body")),_koaStatic=_interopRequireDefault(require("koa-static")),_koaMount=_interopRequireDefault(require("koa-mount")),_chromeDevtoolsFrontend=_interopRequireDefault(require("@hap-toolkit/chrome-devtools-frontend")),_config=_interopRequireDefault(require("@hap-toolkit/shared-utils/config")),_routes=_interopRequireDefault(require("./routes")),_wsserver=require("./wsserver"),_adb=require("../adb");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function applyRouter(e){const t=new _koaRouter.default;e.context.router=t,e.use((0,_koaStatic.default)(_path.default.resolve(__dirname,"../client")));const r=(0,_koaMount.default)("/inspector",(0,_koaStatic.default)(_chromeDevtoolsFrontend.default.devtoolsPath));return e.use(r),t.get("/",_routes.default.index),t.post("/",(0,_koaBody.default)(),_routes.default.adapterForBackwardComp),t.post("/postwsid",(0,_koaBody.default)(),_routes.default.register),t.get("/searchsn",(0,_koaBody.default)(),_routes.default.searchSn),t.post("/poststdbg",(0,_koaBody.default)(),_routes.default.startDebug),t.get("/qrcode",_routes.default.qrCode),t}async function beforeStart(e,t){await(0,_wsserver.createSocketServer)(e,t);const r=t.context.conf,{disableADB:o}=r.options;o||(t.context.adbDebugger=(0,_adb.createADBDebugger)({pathClientLog:_config.default.clientRecordPath,localReversePort:r.defaults.serverPort}))}module.exports={applyRouter:applyRouter,beforeStart:beforeStart};
//# sourceMappingURL=index.js.map
