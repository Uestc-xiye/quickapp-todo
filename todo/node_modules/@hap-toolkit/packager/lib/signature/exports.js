"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.signForRpk=signForRpk,exports.signForRpks=signForRpks,Object.defineProperty(exports,"setRemoteCryptoSignFunction",{enumerable:!0,get:function(){return _signer.setRemoteCryptoSignFunction}});var _ziputil=require("../common/ziputil"),_index=require("./index"),_signer=require("./algorithm/signer");const RpkValidateKey="manifest.json";async function signForRpk(e,i,t){if(!(await(0,_ziputil.getFilesOfZipBuffer)(e))[RpkValidateKey])throw new Error(`签名失败：请确认参数为rpk文件！因为其中不存在：${RpkValidateKey}！`);return await(0,_index.signZipBufferForPackage)(e,i,t)}async function signForRpks(e,i,t){const r=await(0,_ziputil.getFilesOfZipBuffer)(e);if(!(Object.keys(r).filter(e=>e.endsWith(".rpk")).length>0))throw new Error("签名失败：请确认参数为rpks文件！因为其中不存在：rpk后缀文件！");const n=await(0,_ziputil.createFileListFromZipBuffer)(e);let o=n.fileList.map(async e=>{const r=await(0,_index.signZipBufferForPackage)(e.content,i,t);return{path:e.path,content:r}});o=await Promise.all(o);let a=await(0,_ziputil.createZipBufferFromFileList)(o,n.comment);return a=await(0,_index.signZipBufferForPackage)(a,i,t),a}
//# sourceMappingURL=exports.js.map
