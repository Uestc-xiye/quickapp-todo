"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createZipBufferFromFileList=createZipBufferFromFileList,exports.createFileListFromZipBuffer=createFileListFromZipBuffer,exports.removeMetaForRpkOrRpksFile=removeMetaForRpkOrRpksFile,exports.getFilesOfZipBuffer=getFilesOfZipBuffer;var _jszip=_interopRequireDefault(require("jszip")),_constant=require("./constant");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}async function createZipBufferFromFileList(e,t=null){const r=new _jszip.default;return e.forEach(e=>{if(!e.path||!e.content)throw new Error(`### App Loader ### 创建ZIP流时的文件路径或内容不能为空：${e}`);r.file(e.path,e.content)}),await r.generateAsync(_objectSpread({},_constant.COMPRESS_OPTS,{comment:t}))}async function createFileListFromZipBuffer(e){const t=await _jszip.default.loadAsync(e,_constant.COMPRESS_OPTS);const r=await Promise.all(Object.keys(t.files).map((async function(e){return{path:e,content:await t.files[e].async("nodebuffer")}})));return{fileList:r,comment:t.comment,getFileBuffer(e){let t=r.find(t=>t.path===e);return t&&(t=t.content),t}}}async function removeMetaForRpkOrRpksFile(e){const t=await _jszip.default.loadAsync(e,_constant.COMPRESS_OPTS);return t.remove(_constant.DIGEST_ZIP_DIR),await t.generateAsync(_constant.COMPRESS_OPTS)}async function getFilesOfZipBuffer(e){return(await _jszip.default.loadAsync(e,_constant.COMPRESS_OPTS)).files}
//# sourceMappingURL=ziputil.js.map
