"use strict";const path=require("path"),{readJson:readJson}=require("@hap-toolkit/shared-utils"),globalConfig=require("@hap-toolkit/shared-utils/config"),{compileOptionsMeta:compileOptionsMeta,compileOptionsObject:compileOptionsObject}=require("@hap-toolkit/shared-utils/compilation-config"),CopyDslPlugin=require("./plugins/copy-dsl-plugin"),HandlerPlugin=require("./plugins/handler-plugin"),ResourcePlugin=require("./plugins/resource-plugin"),DeviceTypePlugin=require("./plugins/device-type-plugin"),ZipPlugin=require("./plugins/zip-plugin"),NotifyPlugin=require("./plugins/notify-plugin"),SourcemapFixPlugin=require("./plugins/sourcemap-fix-plugin"),SplitChunksAdaptPlugin=require("./plugins/splitchunks-adapt-plugin"),{genPriorities:genPriorities}=require("./common/utils");function postHook(e,i,o={}){const s=globalConfig.projectPath,{appPackageName:n,appIcon:t,versionCode:p,pathDist:l,pathBuild:r,pathSignFolder:u,pathSrc:a,subpackages:c,workers:g}=i,d=readJson(path.join(a,"manifest.json")),m=genPriorities(d),b=[require.resolve("./loaders/module-loader.js"),{loader:require.resolve("babel-loader"),options:{cwd:s,cacheDirectory:!0}}];compileOptionsObject.enableIstanbul&&b.unshift({loader:"istanbul-instrumenter-loader"}),e.module.rules.push({test:/\.js$/,use:b}),e.module.rules.push({test:/\.json$/,include:[path.join(a,"manifest.json")],use:[{loader:require.resolve("./loaders/device-type-loader.js"),options:{srcPath:a}}]});const h="prod"!==process.env.NODE_PHASE,O=JSON.stringify({toolkit:require("../package.json").version,timeStamp:(new Date).toJSON(),node:process.version,platform:process.platform,arch:process.arch});if(compileOptionsObject.includeDslFromLib&&e.plugins.unshift(new CopyDslPlugin({cwd:s,config:d.config})),compileOptionsObject.splitChunksMode===compileOptionsMeta.splitChunksModeEnum.SMART&&e.plugins.push(new SplitChunksAdaptPlugin({subpackages:c,disableSubpackages:compileOptionsObject.disableSubpackages})),e.plugins.push(new HandlerPlugin({pathSrc:a,workers:g,enableE2e:compileOptionsObject.enableE2e}),new DeviceTypePlugin({srcPath:a,buildPath:r}),new ResourcePlugin({src:a,dest:r,projectRoot:globalConfig.projectPath,configDebugInManifest:h,optimizeUnusedResource:compileOptionsObject.optimizeUnusedResource}),new ZipPlugin({name:n,icon:t,versionCode:p,output:l,pathSrc:a,pathBuild:r,pathSignFolder:u,priorities:m,subpackages:c,comment:O,cwd:s,disableStreamPack:compileOptionsObject.disableStreamPack,disableSubpackages:compileOptionsObject.disableSubpackages,signMode:compileOptionsObject.signMode}),new NotifyPlugin),compileOptionsObject.matchSourcemap&&e.plugins.push(new SourcemapFixPlugin),compileOptionsObject.stats){const i=require("webpack-bundle-analyzer").BundleAnalyzerPlugin;e.plugins.push(new i({analyzerMode:"static",openAnalyzer:!1,excludeAssets:/^@(system|service)\./}))}}module.exports={postHook:postHook};
//# sourceMappingURL=webpack.post.js.map
