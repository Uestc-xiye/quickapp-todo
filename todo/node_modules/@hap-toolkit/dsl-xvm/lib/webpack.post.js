"use strict";const{compileOptionsObject:compileOptionsObject}=require("@hap-toolkit/shared-utils/compilation-config"),{loaderWrapper:loaderWrapper}=require("@hap-toolkit/packager/lib/common/utils");module.exports.postHook=function(e,{cwd:r,pathSrc:o},s){let l;if(s?(l=s,l.webpack&&(l=l.webpack)):l={module:{rules:[{test:/\.(png|jpe?g|gif|svg|bmp|webp|mp4|wmv|avi|mpg|rmvb|mov|flv|otf|ttf|ttc|woff|eot)$/i,use:{loader:require.resolve("url-loader")}}]}},(l&&l.module&&l.module.rules||[]).forEach(r=>{r.test.exec(".ts")&&loaderWrapper(o,r),e.module.rules.push(r)}),e.module.rules.push({test:/\.(ux|mix)/,oneOf:[{resourceQuery:/uxType=app/,use:require.resolve("./loaders/app-loader.js")},{resourceQuery:/uxType=(page|comp|card)/,use:require.resolve("./loaders/ux-loader.js")},{use:require.resolve("./loaders/ux-loader.js")}]}),compileOptionsObject.enableExtractCss){const r=require("./plugins/extract-css-plugin");e.plugins.push(new r)}e.plugins.push(...l&&l.plugins||[]),Object.keys(e.resolve).forEach(r=>{const o=e.resolve[r];o instanceof Array?o.push(...l.resolve&&l.resolve[r]||[]):"object"==typeof o&&null!==o&&Object.assign(o,l.resolve&&l.resolve[r]||{})}),Object.keys(l&&l.resolve||{}).forEach(r=>{r in e.resolve||(e.resolve[r]=l.resolve[r])})};
//# sourceMappingURL=webpack.post.js.map
